version: 2.1

workflows:
  version: 2
  test:
    jobs: &test-jobs
      - test:
          context: circleci-user
  build_daily:
    triggers:
      - schedule:
          # 10:00 EST/11:00 EDT Monday-Friday
          cron: "0 15 * * 1-5"
          filters:
            branches:
              only:
                # FIXME move to master
                - feature/circleci-delivery
    jobs: *test-jobs

orbs:
  slack: circleci/slack@3.4.2
  aws-ecr: circleci/aws-ecr@6.12.2

commands:
  run_test:
    description: Runs a particular tap tester test
    parameters:
      file:
        type: string
    steps:
      - run:
          # TODO Instead of using always steps to make reading the output
          # easier, emit an xUnit report and let Circle tell you what
          # failed.
          when: always
          name: Testing << parameters.file >>
          command: |
            source dev_env.sh
            source /usr/local/share/virtualenvs/tap-tester/bin/activate
            PYTHONPATH=$PYTHONPATH:/tmp/venv/lib/python3.5/site-packages/ \
            run-test --tap=tap-square \
                     --target=target-stitch \
                     --orchestrator=stitch-orchestrator \
                     --email=harrison+sandboxtest@stitchdata.com \
                     --password=$SANDBOX_PASSWORD \
                     --client-id=50 \
                     tests/test_<< parameters.file >>.py

jobs:
  test:
    docker:
      # FIXME move to 0.latest
      - image: 218546966473.dkr.ecr.us-east-1.amazonaws.com/tap-tester:feature.circleci-delivery
    steps:
      - run: mkdir -p /tmp/circleci_workspace
      # FIXME move to 0.latest
      - run: aws s3 cp s3://com-stitchdata-dev-deployment-assets/environments/deployment-utils/feature.global-queue/docker.env /tmp/circleci_workspace/deployment-utils.docker.env
      - setup_remote_docker
      - aws-ecr/ecr-login
      - run: docker pull 218546966473.dkr.ecr.us-east-1.amazonaws.com/deployment-utils:feature.global-queue
      - run:
          # FIXME move to 0.latest
          command: |
            docker run --rm \
              --env-file /tmp/circleci_workspace/deployment-utils.docker.env \
              218546966473.dkr.ecr.us-east-1.amazonaws.com/deployment-utils:feature.global-queue \
              queue --global || {
                echo 'Failed to queue' >&2
                exit 1
            }

      - checkout
      - restore_cache:
          key: venv-v1-{{ checksum "setup.py" }}
      - run:
          name: 'Setup virtual env'
          command: |
            python3 -m venv /tmp/venv
            source /tmp/venv/bin/activate
            pip install --upgrade pip
            pip install .[dev]
      - run:
          name: 'pylint tap'
          command: |
            source /tmp/venv/bin/activate
            pylint tap_square -d 'broad-except,chained-comparison,empty-docstring,fixme,invalid-name,line-too-long,missing-class-docstring,missing-function-docstring,missing-module-docstring,no-else-raise,no-else-return,too-few-public-methods,too-many-arguments,too-many-branches,too-many-lines,too-many-locals,ungrouped-imports,wrong-spelling-in-comment,wrong-spelling-in-docstring,too-many-public-methods'
      - run:
          name: 'JSON Validator'
          command: |
            source /usr/local/share/virtualenvs/tap-tester/bin/activate
            stitch-validate-json /tmp/venv/lib/python3.5/site-packages/tap_square/schemas/*.json
      - run:
          when: always
          name: 'Integration Tests Setup'
          command: |
            aws s3 cp s3://com-stitchdata-dev-deployment-assets/environments/tap-tester/sandbox dev_env.sh
      - run:
          when: always
          name: 'All Tests Running'
          command: |
            source dev_env.sh
            source /usr/local/share/virtualenvs/tap-tester/bin/activate
            PYTHONPATH=$PYTHONPATH:/tmp/venv/lib/python3.5/site-packages/ \
              python tests/test_config.py
      - run_test: {file: 'discovery'}
      - run_test: {file: 'sync_canary'}
      - run_test: {file: 'automatic_fields'}
      - run_test: {file: 'all_fields'}
      - run_test: {file: 'bookmarks'}
      - run_test: {file: 'bookmarks_static'}
      - run_test: {file: 'start_date'}
      - run_test: {file: 'pagination'}
      - run_test: {file: 'payments'}
      - run:
          when: always
          # FIXME move to 0.latest
          command: |
            docker run \
              --env-file /tmp/circleci_workspace/deployment-utils.docker.env \
              218546966473.dkr.ecr.us-east-1.amazonaws.com/deployment-utils:feature.global-queue \
              unlock --global
      - save_cache:
          key: venv-v1-{{ checksum "setup.py" }}
          paths:
            - /tmp/venv
      # TODO is this where Sources wants it?
      - slack/status:
          channel: '#project-${CIRCLE_PROJECT_REPONAME}'
          mentions: "${CIRCLE_USERNAME}"
          fail_only: true
          failure_message: ':boom: ${CIRCLE_SHA1} tests failed!'
         
